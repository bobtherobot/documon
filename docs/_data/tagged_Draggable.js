{
	"line": 37,
	"name": "Draggable",
	"shortText": "Makes a DOM Element draggable. NOTE: This is a stand-alone implementation. The jbeeb.utils.Draggable class is used for jbeeb objects. Whereas this class can be used on any DOM element (outside of jbeeb).",
	"shortHtml": "<p>Makes a DOM Element draggable. NOTE: This is a stand-alone implementation. The jbeeb.utils.Draggable class is used for jbeeb objects. Whereas this class can be used on any DOM element (outside of jbeeb).</p>",
	"text": "Makes a DOM Element draggable. NOTE: This is a stand-alone implementation. The jbeeb.utils.Draggable class is used for jbeeb objects. Whereas this class can be used on any DOM element (outside of jbeeb).\n\n",
	"html": "<p>Makes a DOM Element draggable. NOTE: This is a stand-alone implementation. The jbeeb.utils.Draggable class is used for jbeeb objects. Whereas this class can be used on any DOM element (outside of jbeeb).</p>",
	"entity": "class",
	"flagSearchText": " Draggable Configuration settings. \n\n\t\tvar myDrag = new documon.Draggable({\n\t\t\t  target\t: obj \n\t\t\t, callback\t: fn\n\t\t\t, constrain\t: \"x\"\n\t\t\t, constrainRect\t: obj\n\t\t\t, threshold : 5\n\t\t});",
	"params": [
		{
			"name": "params",
			"shortText": "Configuration settings.",
			"shortHtml": "<p>Configuration settings.</p>",
			"text": "Configuration settings.",
			"html": "<p>Configuration settings.</p>",
			"type": "Object",
			"children": [
				{
					"name": "target",
					"shortText": "The element to move. String = the ID of the element, or send in the DOM element directly.",
					"shortHtml": "<p>The element to move. String = the ID of the element, or send in the DOM element directly.</p>",
					"text": "The element to move. String = the ID of the element, or send in the DOM element directly.",
					"html": "<p>The element to move. String = the ID of the element, or send in the DOM element directly.</p>",
					"type": "string | DOM Element"
				},
				{
					"name": "callback",
					"shortText": "A function to ping for each kind of operation. See (callback)[#callback] for details.",
					"shortHtml": "<p>A function to ping for each kind of operation. See (callback)[#callback] for details.</p>",
					"text": "A function to ping for each kind of operation. See (callback)[#callback] for details.",
					"html": "<p>A function to ping for each kind of operation. See (callback)[#callback] for details.</p>",
					"type": "function"
				},
				{
					"name": "constrain",
					"shortText": "Constrain movement along the \"x\" or \"y\" axis. Both constrain and constrainRect can be used together or independantly.",
					"shortHtml": "<p>Constrain movement along the \"x\" or \"y\" axis. Both constrain and constrainRect can be used together or independantly.</p>",
					"text": "Constrain movement along the \"x\" or \"y\" axis. Both constrain and constrainRect can be used together or independantly.",
					"html": "<p>Constrain movement along the \"x\" or \"y\" axis. Both constrain and constrainRect can be used together or independantly.</p>",
					"type": "string"
				},
				{
					"name": "constrainRect",
					"shortText": "Constrain movement within a rectangle. The rectangle can be any object (including a DisplayObject) that contains the following properties `x, y, width, height`",
					"shortHtml": "<p>Constrain movement within a rectangle. The rectangle can be any object (including a DisplayObject) that contains the following properties <code>x, y, width, height</code></p>",
					"text": "Constrain movement within a rectangle. The rectangle can be any object (including a DisplayObject) that contains the following properties `x, y, width, height`",
					"html": "<p>Constrain movement within a rectangle. The rectangle can be any object (including a DisplayObject) that contains the following properties <code>x, y, width, height</code></p>",
					"type": "Object"
				},
				{
					"name": "threshold",
					"shortText": "The pixel threshold for issuing the \"didMove\" flag on \"end\"",
					"shortHtml": "<p>The pixel threshold for issuing the \"didMove\" flag on \"end\"</p>",
					"text": "The pixel threshold for issuing the \"didMove\" flag on \"end\"",
					"html": "<p>The pixel threshold for issuing the \"didMove\" flag on \"end\"</p>",
					"type": "number",
					"defaultVal": "5"
				},
				{
					"name": "arg",
					"shortText": "A custom argument to be delivered to the (callback)[#callback].",
					"shortHtml": "<p>A custom argument to be delivered to the (callback)[#callback].</p>",
					"text": "A custom argument to be delivered to the (callback)[#callback].\n",
					"html": "<p>A custom argument to be delivered to the (callback)[#callback].</p>",
					"type": "any"
				}
			]
		}
	],
	"example": [
		{
			"text": "\n\n\t\tvar myDrag = new documon.Draggable({\n\t\t\t  target\t: obj \n\t\t\t, callback\t: fn\n\t\t\t, constrain\t: \"x\"\n\t\t\t, constrainRect\t: obj\n\t\t\t, threshold : 5\n\t\t});",
			"html": "<pre><code>    var myDrag = new documon.Draggable({\n          target    : obj \n        , callback  : fn\n        , constrain : \"x\"\n        , constrainRect : obj\n        , threshold : 5\n    });</code></pre>"
		}
	],
	"file": "documon/template/assets/js/documon/Draggable.js",
	"filename": "Draggable.js",
	"klass": "Draggable",
	"package": "root",
	"docfile": "root.Draggable.html",
	"id": "root.Draggable",
	"methods": [
		{
			"line": 268,
			"access": "private",
			"name": "_down",
			"shortText": "The mouse \"down\" listener function",
			"shortHtml": "<p>The mouse \"down\" listener function</p>",
			"text": "The mouse \"down\" listener function\n",
			"html": "<p>The mouse \"down\" listener function</p>",
			"entity": "method",
			"flagSearchText": " _down evt",
			"params": [
				{
					"name": "evt",
					"shortText": "evt",
					"shortHtml": "<p>evt</p>",
					"text": "evt",
					"html": "<p>evt</p>",
					"type": "MouseEvent"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._down"
		},
		{
			"line": 285,
			"access": "private",
			"name": "_initMove",
			"shortText": "A one-time setup to extablish the starting position and create the (mask)[#maks].",
			"shortHtml": "<p>A one-time setup to extablish the starting position and create the (mask)[#maks].</p>",
			"text": "A one-time setup to extablish the starting position and create the (mask)[#maks].\n",
			"html": "<p>A one-time setup to extablish the starting position and create the (mask)[#maks].</p>",
			"entity": "method",
			"flagSearchText": " _initMove Transfered from teh \"move\" listener.",
			"params": [
				{
					"name": "evt",
					"shortText": "Transfered from teh \"move\" listener.",
					"shortHtml": "<p>Transfered from teh \"move\" listener.</p>",
					"text": "Transfered from teh \"move\" listener.",
					"html": "<p>Transfered from teh \"move\" listener.</p>",
					"type": "MouseEvent"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._initMove"
		},
		{
			"line": 325,
			"access": "private",
			"name": "_move",
			"shortText": "The mouse \"move\" listener function",
			"shortHtml": "<p>The mouse \"move\" listener function</p>",
			"text": "The mouse \"move\" listener function\n",
			"html": "<p>The mouse \"move\" listener function</p>",
			"entity": "method",
			"flagSearchText": " _move evt",
			"params": [
				{
					"name": "evt",
					"shortText": "evt",
					"shortHtml": "<p>evt</p>",
					"text": "evt",
					"html": "<p>evt</p>",
					"type": "MouseEvent"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._move"
		},
		{
			"line": 398,
			"access": "private",
			"name": "_up",
			"shortText": "The mouse \"up\" listener function",
			"shortHtml": "<p>The mouse \"up\" listener function</p>",
			"text": "The mouse \"up\" listener function\n",
			"html": "<p>The mouse \"up\" listener function</p>",
			"entity": "method",
			"flagSearchText": " _up evt",
			"params": [
				{
					"name": "evt",
					"shortText": "evt",
					"shortHtml": "<p>evt</p>",
					"text": "evt",
					"html": "<p>evt</p>",
					"type": "MouseEvent"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._up"
		},
		{
			"line": 257,
			"name": "callback",
			"shortText": "The function to ping when an operation occurs.",
			"shortHtml": "<p>The function to ping when an operation occurs.</p>",
			"text": "The function to ping when an operation occurs.\n",
			"html": "<p>The function to ping when an operation occurs.</p>",
			"entity": "method",
			"flagSearchText": " callback The internal object we use to manage the An object with the following properties: left, top The kind of operation that occured. Can be \"start\" | \"end\" | \"move\" Indicates if the item was simply clicked, or if it was dragged. Only issued when event == \"end\" The argument that was defined during initialization.",
			"access": "protected",
			"params": [
				{
					"name": "obj",
					"shortText": "The internal object we use to manage the",
					"shortHtml": "<p>The internal object we use to manage the</p>",
					"text": "The internal object we use to manage the",
					"html": "<p>The internal object we use to manage the</p>",
					"type": "object"
				},
				{
					"name": "pos",
					"shortText": "An object with the following properties: left, top",
					"shortHtml": "<p>An object with the following properties: left, top</p>",
					"text": "An object with the following properties: left, top",
					"html": "<p>An object with the following properties: left, top</p>",
					"type": "object"
				},
				{
					"name": "kind",
					"shortText": "The kind of operation that occured. Can be \"start\" | \"end\" | \"move\"",
					"shortHtml": "<p>The kind of operation that occured. Can be \"start\" | \"end\" | \"move\"</p>",
					"text": "The kind of operation that occured. Can be \"start\" | \"end\" | \"move\"",
					"html": "<p>The kind of operation that occured. Can be \"start\" | \"end\" | \"move\"</p>",
					"type": "string"
				},
				{
					"name": "didmove",
					"shortText": "Indicates if the item was simply clicked, or if it was dragged. Only issued when event == \"end\"",
					"shortHtml": "<p>Indicates if the item was simply clicked, or if it was dragged. Only issued when event == \"end\"</p>",
					"text": "Indicates if the item was simply clicked, or if it was dragged. Only issued when event == \"end\"",
					"html": "<p>Indicates if the item was simply clicked, or if it was dragged. Only issued when event == \"end\"</p>",
					"type": "boolean"
				},
				{
					"name": "arg",
					"shortText": "The argument that was defined during initialization.",
					"shortHtml": "<p>The argument that was defined during initialization.</p>",
					"text": "The argument that was defined during initialization.",
					"html": "<p>The argument that was defined during initialization.</p>",
					"type": "any"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.callback"
		},
		{
			"line": 442,
			"name": "destroy",
			"shortText": "Destroys and removes listeners.",
			"shortHtml": "<p>Destroys and removes listeners.</p>",
			"text": "Destroys and removes listeners.\n",
			"html": "<p>Destroys and removes listeners.</p>",
			"entity": "method",
			"flagSearchText": " destroy",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.destroy"
		},
		{
			"line": 229,
			"access": "protected",
			"name": "init",
			"shortText": "Initialize",
			"shortHtml": "<p>Initialize</p>",
			"text": "Initialize\n",
			"html": "<p>Initialize</p>",
			"entity": "method",
			"flagSearchText": " init See main class description for details.",
			"params": [
				{
					"name": "params",
					"shortText": "See main class description for details.",
					"shortHtml": "<p>See main class description for details.</p>",
					"text": "See main class description for details.",
					"html": "<p>See main class description for details.</p>",
					"type": "object"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.init"
		},
		{
			"line": 83,
			"access": "private",
			"name": "parsePos",
			"shortText": "Gets the CSS position (releative) of a DOM Element.",
			"shortHtml": "<p>Gets the CSS position (releative) of a DOM Element.</p>",
			"text": "Gets the CSS position (releative) of a DOM Element.\n",
			"html": "<p>Gets the CSS position (releative) of a DOM Element.</p>",
			"entity": "method",
			"flagSearchText": " parsePos The element",
			"params": [
				{
					"name": "elem",
					"shortText": "The element",
					"shortHtml": "<p>The element</p>",
					"text": "The element",
					"html": "<p>The element</p>",
					"type": "DOM Element"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.parsePos"
		},
		{
			"line": 434,
			"name": "setConstrain",
			"shortText": "Causes the movement to be contrained along the X or Y axis.",
			"shortHtml": "<p>Causes the movement to be contrained along the X or Y axis.</p>",
			"text": "Causes the movement to be contrained along the X or Y axis.\n",
			"html": "<p>Causes the movement to be contrained along the X or Y axis.</p>",
			"entity": "method",
			"flagSearchText": " setConstrain Use \"x\" or \"y\". Use \"null\" or no argument to clear contstraint.",
			"params": [
				{
					"name": "val",
					"shortText": "Use \"x\" or \"y\". Use \"null\" or no argument to clear contstraint.",
					"shortHtml": "<p>Use \"x\" or \"y\". Use \"null\" or no argument to clear contstraint.</p>",
					"text": "Use \"x\" or \"y\". Use \"null\" or no argument to clear contstraint.",
					"html": "<p>Use \"x\" or \"y\". Use \"null\" or no argument to clear contstraint.</p>",
					"type": "string"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.setConstrain"
		},
		{
			"line": 425,
			"name": "setConstrainRect",
			"shortText": "Sets the rectangle used to for the boundaries that the item can move within.",
			"shortHtml": "<p>Sets the rectangle used to for the boundaries that the item can move within.</p>",
			"text": "Sets the rectangle used to for the boundaries that the item can move within.\n",
			"html": "<p>Sets the rectangle used to for the boundaries that the item can move within.</p>",
			"entity": "method",
			"flagSearchText": " setConstrainRect An object containing the following properties: `x, y, width, height`. Use \"null\" or no argument to clear contstraint.",
			"params": [
				{
					"name": "val",
					"shortText": "An object containing the following properties: `x, y, width, height`. Use \"null\" or no argument to clear contstraint.",
					"shortHtml": "<p>An object containing the following properties: <code>x, y, width, height</code>. Use \"null\" or no argument to clear contstraint.</p>",
					"text": "An object containing the following properties: `x, y, width, height`. Use \"null\" or no argument to clear contstraint.",
					"html": "<p>An object containing the following properties: <code>x, y, width, height</code>. Use \"null\" or no argument to clear contstraint.</p>",
					"type": "Object"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.setConstrainRect"
		},
		{
			"line": 48,
			"access": "private",
			"name": "setX",
			"shortText": "Shortcut to set the style position.",
			"shortHtml": "<p>Shortcut to set the style position.</p>",
			"text": "Shortcut to set the style position.\n",
			"html": "<p>Shortcut to set the style position.</p>",
			"entity": "method",
			"flagSearchText": " setX The element to move. The x position in pixels.",
			"params": [
				{
					"name": "evt",
					"shortText": "The element to move.",
					"shortHtml": "<p>The element to move.</p>",
					"text": "The element to move.",
					"html": "<p>The element to move.</p>",
					"type": "DOM Element"
				},
				{
					"name": "val",
					"shortText": "The x position in pixels.",
					"shortHtml": "<p>The x position in pixels.</p>",
					"text": "The x position in pixels.",
					"html": "<p>The x position in pixels.</p>",
					"type": "number"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.setX"
		},
		{
			"line": 71,
			"access": "private",
			"name": "setXY",
			"shortText": "Shortcut to set the style position.",
			"shortHtml": "<p>Shortcut to set the style position.</p>",
			"text": "Shortcut to set the style position.\n",
			"html": "<p>Shortcut to set the style position.</p>",
			"entity": "method",
			"flagSearchText": " setXY The element to move. The x position in pixels. The y position in pixels.",
			"params": [
				{
					"name": "evt",
					"shortText": "The element to move.",
					"shortHtml": "<p>The element to move.</p>",
					"text": "The element to move.",
					"html": "<p>The element to move.</p>",
					"type": "DOM Element"
				},
				{
					"name": "x",
					"shortText": "The x position in pixels.",
					"shortHtml": "<p>The x position in pixels.</p>",
					"text": "The x position in pixels.",
					"html": "<p>The x position in pixels.</p>",
					"type": "number"
				},
				{
					"name": "x",
					"shortText": "The y position in pixels.",
					"shortHtml": "<p>The y position in pixels.</p>",
					"text": "The y position in pixels.",
					"html": "<p>The y position in pixels.</p>",
					"type": "number"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.setXY"
		},
		{
			"line": 59,
			"access": "private",
			"name": "setY",
			"shortText": "Shortcut to set the style position.",
			"shortHtml": "<p>Shortcut to set the style position.</p>",
			"text": "Shortcut to set the style position.\n",
			"html": "<p>Shortcut to set the style position.</p>",
			"entity": "method",
			"flagSearchText": " setY The element to move. The y position in pixels.",
			"params": [
				{
					"name": "evt",
					"shortText": "The element to move.",
					"shortHtml": "<p>The element to move.</p>",
					"text": "The element to move.",
					"html": "<p>The element to move.</p>",
					"type": "DOM Element"
				},
				{
					"name": "val",
					"shortText": "The y position in pixels.",
					"shortHtml": "<p>The y position in pixels.</p>",
					"text": "The y position in pixels.",
					"html": "<p>The y position in pixels.</p>",
					"type": "number"
				}
			],
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable.setY"
		}
	],
	"properties": [
		{
			"line": 126,
			"access": "private",
			"name": "_callback",
			"shortText": "Configured callback",
			"shortHtml": "<p>Configured callback</p>",
			"text": "Configured callback",
			"html": "<p>Configured callback</p>",
			"type": "function",
			"entity": "property",
			"flagSearchText": " Configured callback",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._callback"
		},
		{
			"line": 132,
			"access": "private",
			"name": "_callbackArg",
			"shortText": "Configured argument to send to the (callback)[#callback].",
			"shortHtml": "<p>Configured argument to send to the (callback)[#callback].</p>",
			"text": "Configured argument to send to the (callback)[#callback].",
			"html": "<p>Configured argument to send to the (callback)[#callback].</p>",
			"type": "function",
			"entity": "property",
			"flagSearchText": " Configured argument to send to the (callback)[#callback].",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._callbackArg"
		},
		{
			"line": 138,
			"access": "private",
			"name": "_constrain",
			"shortText": "_constrain",
			"shortHtml": "<p>_constrain</p>",
			"text": "_constrain",
			"html": "<p>_constrain</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _constrain",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._constrain"
		},
		{
			"line": 144,
			"access": "private",
			"name": "_constrainRect",
			"shortText": "_constrainRect",
			"shortHtml": "<p>_constrainRect</p>",
			"text": "_constrainRect",
			"html": "<p>_constrainRect</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _constrainRect",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._constrainRect"
		},
		{
			"line": 189,
			"access": "private",
			"name": "_didInitMove",
			"shortText": "_didInitMove",
			"shortHtml": "<p>_didInitMove</p>",
			"text": "_didInitMove",
			"html": "<p>_didInitMove</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _didInitMove",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._didInitMove"
		},
		{
			"line": 176,
			"access": "private",
			"name": "_didMove",
			"shortText": "_didMove",
			"shortHtml": "<p>_didMove</p>",
			"text": "_didMove",
			"html": "<p>_didMove</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _didMove",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._didMove"
		},
		{
			"line": 183,
			"access": "private",
			"name": "_didMoveFudge",
			"shortText": "_didMoveFudge",
			"shortHtml": "<p>_didMoveFudge</p>",
			"text": "_didMoveFudge",
			"html": "<p>_didMoveFudge</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _didMoveFudge",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._didMoveFudge"
		},
		{
			"line": 195,
			"access": "private",
			"name": "_didMoveThreshold",
			"shortText": "The pixel threshold for issuing the \"didMove\" flag on \"end\"",
			"shortHtml": "<p>The pixel threshold for issuing the \"didMove\" flag on \"end\"</p>",
			"text": "The pixel threshold for issuing the \"didMove\" flag on \"end\"",
			"html": "<p>The pixel threshold for issuing the \"didMove\" flag on \"end\"</p>",
			"type": "function",
			"defaultVal": "5",
			"entity": "property",
			"flagSearchText": " The pixel threshold for issuing the \"didMove\" flag on \"end\"",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._didMoveThreshold"
		},
		{
			"line": 201,
			"access": "private",
			"name": "_down_bound",
			"shortText": "_down_bound",
			"shortHtml": "<p>_down_bound</p>",
			"text": "_down_bound",
			"html": "<p>_down_bound</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _down_bound",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._down_bound"
		},
		{
			"line": 220,
			"access": "private",
			"name": "_mask",
			"shortText": "The overlay masking object used to reject mouse events on underlaying DOM elements.",
			"shortHtml": "<p>The overlay masking object used to reject mouse events on underlaying DOM elements.</p>",
			"text": "The overlay masking object used to reject mouse events on underlaying DOM elements.",
			"html": "<p>The overlay masking object used to reject mouse events on underlaying DOM elements.</p>",
			"type": "DOM Element",
			"entity": "property",
			"flagSearchText": " The overlay masking object used to reject mouse events on underlaying DOM elements.",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._mask"
		},
		{
			"line": 214,
			"access": "private",
			"name": "_move_bound",
			"shortText": "_move_bound",
			"shortHtml": "<p>_move_bound</p>",
			"text": "_move_bound",
			"html": "<p>_move_bound</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _move_bound",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._move_bound"
		},
		{
			"line": 163,
			"access": "private",
			"name": "_startMouseX",
			"shortText": "_startMouseX",
			"shortHtml": "<p>_startMouseX</p>",
			"text": "_startMouseX",
			"html": "<p>_startMouseX</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _startMouseX",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._startMouseX"
		},
		{
			"line": 170,
			"access": "private",
			"name": "_startMouseY",
			"shortText": "_startMouseY",
			"shortHtml": "<p>_startMouseY</p>",
			"text": "_startMouseY",
			"html": "<p>_startMouseY</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _startMouseY",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._startMouseY"
		},
		{
			"line": 150,
			"access": "private",
			"name": "_startX",
			"shortText": "_startX",
			"shortHtml": "<p>_startX</p>",
			"text": "_startX",
			"html": "<p>_startX</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _startX",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._startX"
		},
		{
			"line": 157,
			"access": "private",
			"name": "_startY",
			"shortText": "_startY",
			"shortHtml": "<p>_startY</p>",
			"text": "_startY",
			"html": "<p>_startY</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _startY",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._startY"
		},
		{
			"line": 120,
			"access": "private",
			"name": "_target",
			"shortText": "The object we're going to drag.",
			"shortHtml": "<p>The object we're going to drag.</p>",
			"text": "The object we're going to drag.",
			"html": "<p>The object we're going to drag.</p>",
			"type": "DOM Element",
			"entity": "property",
			"flagSearchText": " The object we're going to drag.",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._target"
		},
		{
			"line": 208,
			"access": "private",
			"name": "_up_bound",
			"shortText": "_up_bound",
			"shortHtml": "<p>_up_bound</p>",
			"text": "_up_bound",
			"html": "<p>_up_bound</p>",
			"type": "object",
			"entity": "property",
			"flagSearchText": " _up_bound",
			"file": "documon/template/assets/js/documon/Draggable.js",
			"filename": "Draggable.js",
			"klass": "Draggable",
			"package": "root",
			"docfile": "root.Draggable.html",
			"id": "root.Draggable._up_bound"
		}
	],
	"prettyLangs": [],
	"projectName": "Documon",
	"projectVersion": "2.5.5",
	"search": {
		"root.Draggable": "Draggable : Makes Element draggable NOTE This stand alone implementation jbeeb utils Draggable class used jbeeb objects Whereas this class used element outside jbeebDraggable Configuration settings myDrag documon Draggable target callback constrain constrainRect threshold",
		"root.Draggable.setX": "setX : Shortcut style positionsetX element move position pixels",
		"root.Draggable.setY": "setY : Shortcut style positionsetY element move position pixels",
		"root.Draggable.setXY": "setXY : Shortcut style positionsetXY element move position pixels position pixels",
		"root.Draggable.parsePos": "parsePos : Gets position releative ElementparsePos element",
		"root.Draggable.init": "init : init main class description details",
		"root.Draggable.callback": "callback : function ping when operation occurscallback internal object manage object with following properties left kind operation that occured start move Indicates item simply clicked dragged Only issued when event argument that defined during initialization",
		"root.Draggable._down": "_down : mouse down listener function",
		"root.Draggable._initMove": "_initMove : time setup extablish starting position create mask maksinitMove Transfered from move listener",
		"root.Draggable._move": "_move : mouse move listener function",
		"root.Draggable._up": "_up : mouse listener function",
		"root.Draggable.setConstrainRect": "setConstrainRect : Sets rectangle used boundaries that item move withinsetConstrainRect object containing following properties width height null argument clear contstraint",
		"root.Draggable.setConstrain": "setConstrain : Causes movement contrained along axissetConstrain null argument clear contstraint",
		"root.Draggable.destroy": "destroy : Destroys removes listeners",
		"root.Draggable._target": "_target : object going dragobject going drag",
		"root.Draggable._callback": "_callback : Configured callbackConfigured callback",
		"root.Draggable._callbackArg": "_callbackArg : Configured argument send callback callbackConfigured argument send callback callback",
		"root.Draggable._didMoveThreshold": "_didMoveThreshold : pixel threshold issuing didMove flagpixel threshold issuing didMove flag",
		"root.Draggable._down_bound": "_down_bound : down bounddown bound",
		"root.Draggable._move_bound": "_move_bound : move boundmove bound",
		"root.Draggable._mask": "_mask : overlay masking object used reject mouse events underlaying elementsoverlay masking object used reject mouse events underlaying elements"
	}
}
{
	"line": 30,
	"name": "More",
	"entity": "class",
	"flagSearchText": " More documon The primary documon configuration [documon.js::mainConf](documon.documon.mainConf), which should contain:\n- moreQuirkDelimiter\n- outputAssetsFolder\n- moreFolder\n- templateFolder\n- outputFolder The menu for the parsed source code documentation. We'll merge it into the \"more\" menu. The searchData (local to documon's [run](documon.documon.run) function, as generated by [seeder](documon.documon.seeder) ), we'll include our \"more\" docs for searching. Serves 2 purposes, when returning __undefined__ notifies callee that there aren't any \"more\" docs. Otherwise the modified menu is return with the original sourceDocsMenu either tacked onto the end of the \"more\" menu, or incorporated into the \"more\" menu at the \"DOCS-GO-HERE\" injection point.\n",
	"package": "documon",
	"access": "private",
	"params": [
		{
			"name": "params",
			"shortText": "The primary documon configuration [documon.js::mainConf](documon.documon.mainConf), which should contain:",
			"shortHtml": "<p>The primary documon configuration <a href=\"documon.documon.mainConf\">documon.js::mainConf</a>, which should contain:</p>",
			"text": "The primary documon configuration [documon.js::mainConf](documon.documon.mainConf), which should contain:\n- moreQuirkDelimiter\n- outputAssetsFolder\n- moreFolder\n- templateFolder\n- outputFolder",
			"html": "<p>The primary documon configuration <a href=\"documon.documon.mainConf\">documon.js::mainConf</a>, which should contain: <br>\n- moreQuirkDelimiter <br>\n- outputAssetsFolder <br>\n- moreFolder <br>\n- templateFolder <br>\n- outputFolder</p>",
			"type": "object"
		},
		{
			"name": "sourceDocsMenu",
			"shortText": "The menu for the parsed source code documentation. We'll merge it into the \"more\" menu.",
			"shortHtml": "<p>The menu for the parsed source code documentation. We'll merge it into the \"more\" menu.</p>",
			"text": "The menu for the parsed source code documentation. We'll merge it into the \"more\" menu.",
			"html": "<p>The menu for the parsed source code documentation. We'll merge it into the \"more\" menu.</p>",
			"type": "object"
		},
		{
			"name": "searchDB",
			"shortText": "The searchData (local to documon's [run](documon.documon.run) function, as generated by [seeder](documon.documon.seeder) ), we'll include our \"more\" docs for searching.",
			"shortHtml": "<p>The searchData (local to documon's <a href=\"documon.documon.run\">run</a> function, as generated by <a href=\"documon.documon.seeder\">seeder</a> ), we'll include our \"more\" docs for searching.</p>",
			"text": "The searchData (local to documon's [run](documon.documon.run) function, as generated by [seeder](documon.documon.seeder) ), we'll include our \"more\" docs for searching.",
			"html": "<p>The searchData (local to documon's <a href=\"documon.documon.run\">run</a> function, as generated by <a href=\"documon.documon.seeder\">seeder</a> ), we'll include our \"more\" docs for searching.</p>",
			"type": "object"
		}
	],
	"returns": {
		"type": "menu | undefined",
		"text": "Serves 2 purposes, when returning __undefined__ notifies callee that there aren't any \"more\" docs. Otherwise the modified menu is return with the original sourceDocsMenu either tacked onto the end of the \"more\" menu, or incorporated into the \"more\" menu at the \"DOCS-GO-HERE\" injection point.\n",
		"html": "<p>Serves 2 purposes, when returning <strong>undefined</strong> notifies callee that there aren't any \"more\" docs. Otherwise the modified menu is return with the original sourceDocsMenu either tacked onto the end of the \"more\" menu, or incorporated into the \"more\" menu at the \"DOCS-GO-HERE\" injection point.</p>",
		"shortText": "<p>Serves 2 purposes, when returning <strong>undefined</strong> notifies callee that there aren't any \"more\" docs. Otherwise the modified menu is return with the original sourceDocsMenu either tacked onto the end of the \"more\" menu, or incorporated into the \"more\" menu at the \"DOCS-GO-HERE\" injection point.</p>",
		"shortHtml": "<p>Serves 2 purposes, when returning <strong>undefined</strong> notifies callee that there aren't any \"more\" docs. Otherwise the modified menu is return with the original sourceDocsMenu either tacked onto the end of the \"more\" menu, or incorporated into the \"more\" menu at the \"DOCS-GO-HERE\" injection point.</p>"
	},
	"shortText": "Discovers, parses, converts markdown to HTML and injects menu with \"more\" docs.",
	"shortHtml": "<p>Discovers, parses, converts markdown to HTML and injects menu with \"more\" docs.</p>",
	"text": "\nDiscovers, parses, converts markdown to HTML and injects menu with \"more\" docs.\n\nProcesses the \"more\" markdown folder by:\n- Building the menu to reflect the \"more folder\" directory structure.\n- Translates markdown into HTML\n\n\n",
	"html": "<p>Discovers, parses, converts markdown to HTML and injects menu with \"more\" docs.</p>\n\n<p>Processes the \"more\" markdown folder by: <br>\n- Building the menu to reflect the \"more folder\" directory structure. <br>\n- Translates markdown into HTML</p>",
	"file": "documon/src/more.js",
	"filename": "more.js",
	"klass": "More",
	"docfile": "documon.More.html",
	"id": "documon.More",
	"methods": [
		{
			"line": 190,
			"name": "cleanID",
			"entity": "method",
			"flagSearchText": " cleanID description description description",
			"access": "private",
			"params": [
				{
					"name": "id",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				},
				{
					"name": "amFolder",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				}
			],
			"returns": {
				"type": "type",
				"text": "description description",
				"html": "<p>description description</p>",
				"shortText": "<p>description description</p>",
				"shortHtml": "<p>description description</p>"
			},
			"shortText": "Cleans the ID so the ID only contains lapha-numeric characters. Non-alphanumeric characters are translated into an underscore character.",
			"shortHtml": "<p>Cleans the ID so the ID only contains lapha-numeric characters. Non-alphanumeric characters are translated into an underscore character.</p>",
			"text": "Cleans the ID so the ID only contains lapha-numeric characters. Non-alphanumeric characters are translated into an underscore character.\n",
			"html": "<p>Cleans the ID so the ID only contains lapha-numeric characters. Non-alphanumeric characters are translated into an underscore character.</p>",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.cleanID"
		},
		{
			"line": 257,
			"name": "init",
			"entity": "method",
			"flagSearchText": " init description description description description",
			"access": "private",
			"params": [
				{
					"name": "params",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				},
				{
					"name": "sourceDocsMenu",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				},
				{
					"name": "searchDB",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				}
			],
			"returns": {
				"type": "type",
				"text": "description description",
				"html": "<p>description description</p>",
				"shortText": "<p>description description</p>",
				"shortHtml": "<p>description description</p>"
			},
			"shortText": "See class description.",
			"shortHtml": "<p>See class description.</p>",
			"text": "See class description.\n",
			"html": "<p>See class description.</p>",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.init"
		},
		{
			"line": 95,
			"name": "newItem",
			"entity": "method",
			"flagSearchText": " newItem The path to the markdown file. Process as a folder? An object containing structured data:\n\n\t \t{\n\t\t\t  id\n\t\t\t, url // as originally provided \n\t\t\t, label // Cleaned up (no numbering) filename\n\t\t\t, name : // same as label but the page.jst template needs the \"name\" property.\n\t\t\t, kind : // The CSS class used on the icon( amFolder ? \"more-folder\" : \"more-file\" )\n\t\t\t, amFolder : // is a folder?\n\t\t\t, basepath : // The parent folder.\n\t\t\t, parentID : // The parent's id (e.g.more.foo)\n\t\t\t, children : // Folders have a children array\n\t\t}\n",
			"access": "private",
			"params": [
				{
					"name": "url",
					"shortText": "The path to the markdown file.",
					"shortHtml": "<p>The path to the markdown file.</p>",
					"text": "The path to the markdown file.",
					"html": "<p>The path to the markdown file.</p>",
					"type": "string"
				},
				{
					"name": "amFolder",
					"shortText": "Process as a folder?",
					"shortHtml": "<p>Process as a folder?</p>",
					"text": "Process as a folder?",
					"html": "<p>Process as a folder?</p>",
					"type": "boolean"
				}
			],
			"returns": {
				"type": "object",
				"text": "An object containing structured data:\n\n\t \t{\n\t\t\t  id\n\t\t\t, url // as originally provided \n\t\t\t, label // Cleaned up (no numbering) filename\n\t\t\t, name : // same as label but the page.jst template needs the \"name\" property.\n\t\t\t, kind : // The CSS class used on the icon( amFolder ? \"more-folder\" : \"more-file\" )\n\t\t\t, amFolder : // is a folder?\n\t\t\t, basepath : // The parent folder.\n\t\t\t, parentID : // The parent's id (e.g.more.foo)\n\t\t\t, children : // Folders have a children array\n\t\t}\n",
				"html": "<p>An object containing structured data:</p>\n\n<pre class=\"prettyprint\">    {\n          id\n        , url // as originally provided \n        , label // Cleaned up (no numbering) filename\n        , name : // same as label but the page.jst template needs the \"name\" property.\n        , kind : // The CSS class used on the icon( amFolder ? \"more-folder\" : \"more-file\" )\n        , amFolder : // is a folder?\n        , basepath : // The parent folder.\n        , parentID : // The parent's id (e.g.more.foo)\n        , children : // Folders have a children array\n    }</pre>",
				"shortText": "<p>An object containing structured data:</p>",
				"shortHtml": "<p>An object containing structured data:</p>"
			},
			"shortText": "Opens, catalogs and builds a new page from the provided file path.",
			"shortHtml": "<p>Opens, catalogs and builds a new page from the provided file path.</p>",
			"text": "Opens, catalogs and builds a new page from the provided file path.\n",
			"html": "<p>Opens, catalogs and builds a new page from the provided file path.</p>",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.newItem"
		},
		{
			"line": 236,
			"name": "parseJSON",
			"entity": "method",
			"flagSearchText": " parseJSON val",
			"access": "private",
			"params": [
				{
					"name": "val",
					"shortText": "val",
					"shortHtml": "<p>val</p>",
					"text": "val",
					"html": "<p>val</p>",
					"type": "string"
				}
			],
			"returns": {
				"type": "any",
				"text": "",
				"html": "",
				"shortText": "",
				"shortHtml": ""
			},
			"shortText": "A safe replacement for standard JSON parsing that mitigates errors.",
			"shortHtml": "<p>A safe replacement for standard JSON parsing that mitigates errors.</p>",
			"text": "A safe replacement for standard JSON parsing that mitigates errors.\n",
			"html": "<p>A safe replacement for standard JSON parsing that mitigates errors.</p>",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.parseJSON"
		},
		{
			"line": 203,
			"name": "quirkyName",
			"entity": "method",
			"flagSearchText": " quirkyName description description description",
			"access": "private",
			"params": [
				{
					"name": "filename",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				},
				{
					"name": "amFolder",
					"shortText": "description",
					"shortHtml": "<p>description</p>",
					"text": "description",
					"html": "<p>description</p>",
					"type": "type"
				}
			],
			"returns": {
				"type": "type",
				"text": "description description",
				"html": "<p>description description</p>",
				"shortText": "<p>description description</p>",
				"shortHtml": "<p>description description</p>"
			},
			"shortText": "splits the numbering off of eight filename and returns the filename with out numbering",
			"shortHtml": "<p>splits the numbering off of eight filename and returns the filename with out numbering</p>",
			"text": "splits the numbering off of eight filename and returns the filename with out numbering\n",
			"html": "<p>splits the numbering off of eight filename and returns the filename with out numbering</p>",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.quirkyName"
		}
	],
	"properties": [
		{
			"line": 64,
			"name": "docGoesHereStr",
			"shortText": "The string used as the flag as to where to insert the parsed source documents into the menu.",
			"shortHtml": "<p>The string used as the flag as to where to insert the parsed source documents into the menu.</p>",
			"text": "The string used as the flag as to where to insert the parsed source documents into the menu.",
			"html": "<p>The string used as the flag as to where to insert the parsed source documents into the menu.</p>",
			"type": "string",
			"entity": "property",
			"flagSearchText": " The string used as the flag as to where to insert the parsed source documents into the menu.",
			"access": "private",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.docGoesHereStr"
		},
		{
			"line": 44,
			"name": "flat",
			"shortText": "A place to store generated page objects with a direct reference to their ID via flat[id].",
			"shortHtml": "<p>A place to store generated page objects with a direct reference to their ID via flat[id].</p>",
			"text": "A place to store generated page objects with a direct reference to their ID via flat[id].",
			"html": "<p>A place to store generated page objects with a direct reference to their ID via flat[id].</p>",
			"type": "string",
			"entity": "property",
			"flagSearchText": " A place to store generated page objects with a direct reference to their ID via flat[id].",
			"access": "private",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.flat"
		},
		{
			"line": 70,
			"name": "metaRx",
			"shortText": "The regular expression use to split the doc on the [metaString](#metaString)",
			"shortHtml": "<p>The regular expression use to split the doc on the <a href=\"#metaString\">metaString</a></p>",
			"text": "The regular expression use to split the doc on the [metaString](#metaString)",
			"html": "<p>The regular expression use to split the doc on the <a href=\"#metaString\">metaString</a></p>",
			"type": "string",
			"entity": "property",
			"flagSearchText": " The regular expression use to split the doc on the [metaString](#metaString)",
			"access": "private",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.metaRx"
		},
		{
			"line": 58,
			"name": "metaString",
			"shortText": "The delimiting string used to seperate the meta JSON from normal markdown.",
			"shortHtml": "<p>The delimiting string used to seperate the meta JSON from normal markdown.</p>",
			"text": "The delimiting string used to seperate the meta JSON from normal markdown.",
			"html": "<p>The delimiting string used to seperate the meta JSON from normal markdown.</p>",
			"type": "string",
			"entity": "property",
			"flagSearchText": " The delimiting string used to seperate the meta JSON from normal markdown.",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.metaString"
		},
		{
			"line": 51,
			"name": "quirkDelimiter",
			"shortText": "Used to mark where filename numbering terminates and the \"title\" begins. User configurable via the [moreQuirkDelimiter option](more.options).",
			"shortHtml": "<p>Used to mark where filename numbering terminates and the \"title\" begins. User configurable via the <a href=\"more.options\">moreQuirkDelimiter option</a>.</p>",
			"text": "Used to mark where filename numbering terminates and the \"title\" begins. User configurable via the [moreQuirkDelimiter option](more.options).",
			"html": "<p>Used to mark where filename numbering terminates and the \"title\" begins. User configurable via the <a href=\"more.options\">moreQuirkDelimiter option</a>.</p>",
			"type": "string",
			"entity": "property",
			"flagSearchText": " Used to mark where filename numbering terminates and the \"title\" begins. User configurable via the [moreQuirkDelimiter option](more.options).",
			"access": "private",
			"file": "documon/src/more.js",
			"filename": "more.js",
			"klass": "More",
			"package": "documon",
			"docfile": "documon.More.html",
			"id": "documon.More.quirkDelimiter"
		}
	],
	"prettyLangs": [],
	"projectName": "Documon",
	"projectVersion": "0.0.1",
	"search": {
		"documon.More": "More : Discovers parses converts markdown HTML injects menu with more docs Processes more markdown folder Building menu reflect more folder directory structure Translates markdown into HTMLMore documon primary documon configuration documon mainConf documon documon mainConf which should contain moreQuirkDelimiter outputAssetsFolder moreFolder templateFolder outputFolder menu parsed source code documentation merge into more menu searchData local documon documon documon function generated seeder documon documon seeder include more docs searching Serves purposes when returning undefined notifies callee that there aren more docs Otherwise modified menu return with original sourceDocsMenu either tacked onto more menu incorporated into more menu DOCS HERE injection point",
		"documon.More.newItem": "newItem : Opens catalogs builds page from provided file pathnewItem path markdown file Process folder object containing structured data originally provided label Cleaned numbering filename name same label page template needs name property kind class used icon amFolder more folder more file amFolder folder basepath parent folder parentID parent more children Folders have children array",
		"documon.More.cleanID": "cleanID : Cleans only contains lapha numeric characters alphanumeric characters translated into underscore charactercleanID description description description",
		"documon.More.quirkyName": "quirkyName : splits numbering eight filename returns filename with numberingquirkyName description description description",
		"documon.More.parseJSON": "parseJSON : safe replacement standard JSON parsing that mitigates errors",
		"documon.More.init": "init : class descriptioninit description description description description",
		"documon.More.flat": "flat : place store generated page objects with direct reference their flatplace store generated page objects with direct reference their flat",
		"documon.More.quirkDelimiter": "quirkDelimiter : Used mark where filename numbering terminates title begins User configurable moreQuirkDelimiter option more optionsUsed mark where filename numbering terminates title begins User configurable moreQuirkDelimiter option more options",
		"documon.More.metaString": "metaString : delimiting string used seperate meta JSON from normal markdowndelimiting string used seperate meta JSON from normal markdown",
		"documon.More.docGoesHereStr": "docGoesHereStr : string used flag where insert parsed source documents into menustring used flag where insert parsed source documents into menu",
		"documon.More.metaRx": "metaRx : regular expression split metaString metaStringregular expression split metaString metaString"
	}
}
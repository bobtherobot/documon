var SearchData = {
	"documon.Access": "Access : Toggles member parts inheritance private public protected menu pages This class serves dual purpose loaded main index html page well individual pages that loaded into main page Since individual pages loaded iframes messaging system communicate between index content pagesAccess documon",
	"documon.Access.applyAccess": "applyAccess : Applies access current page When showQuery hideQuery provided then these will used apply access when provided previous values will used Generallly index page defines showQuery hideQuery values checkbox actions content pages rely sending arguments function apply access pageapplyAccess string selector querySelectorAll hideQuery",
	"documon.Access.clickAccess": "clickAccess : checkbox action handlerclickAccess window event",
	"documon.Access.setAccess": "setAccess : Generates selector strings showing hiding members query based HTML tags that have data attributes that match value boolena type access values such public private protected boolean access such inherits just checks data inherits attribute existssetAccess true when want show memebers that inherited true when want show memebers that private true when want show memebers that protected",
	"documon.Access.restoreChecked": "restoreChecked : Restores checkboxes value used last visit",
	"documon.Access.init": "init : startup initializer",
	"documon.Access.receiveMessage": "receiveMessage : handler pinged when content page loaded check what access whoudl pagereceiveMessage message object",
	"root.sort_by": "sort_by : sort field FunctionExpression",
	"root.Draggable": "Draggable : Makes Element draggable NOTE This stand alone implementation jbeeb utils Draggable class used jbeeb objects Whereas this class used element outside jbeebDraggable Configuration settings myDrag documon Draggable target callback constrain constrainRect threshold",
	"root.Draggable.setX": "setX : Shortcut style positionsetX element move position pixels",
	"root.Draggable.setY": "setY : Shortcut style positionsetY element move position pixels",
	"root.Draggable.setXY": "setXY : Shortcut style positionsetXY element move position pixels position pixels",
	"root.Draggable.parsePos": "parsePos : Gets position releative ElementparsePos element",
	"root.Draggable.init": "init : init main class description details",
	"root.Draggable.callback": "callback : function ping when operation occurscallback internal object manage object with following properties left kind operation that occured start move Indicates item simply clicked dragged Only issued when event argument that defined during initialization",
	"root.Draggable._down": "_down : mouse down listener function",
	"root.Draggable._initMove": "_initMove : time setup extablish starting position create mask maksinitMove Transfered from move listener",
	"root.Draggable._move": "_move : mouse move listener function",
	"root.Draggable._up": "_up : mouse listener function",
	"root.Draggable.setConstrainRect": "setConstrainRect : Sets rectangle used boundaries that item move withinsetConstrainRect object containing following properties width height null argument clear contstraint",
	"root.Draggable.setConstrain": "setConstrain : Causes movement contrained along axissetConstrain null argument clear contstraint",
	"root.Draggable.destroy": "destroy : Destroys removes listeners",
	"root.Draggable._target": "_target : object going dragobject going drag",
	"root.Draggable._callback": "_callback : Configured callbackConfigured callback",
	"root.Draggable._callbackArg": "_callbackArg : Configured argument send callback callbackConfigured argument send callback callback",
	"root.Draggable._didMoveThreshold": "_didMoveThreshold : pixel threshold issuing didMove flagpixel threshold issuing didMove flag",
	"root.Draggable._down_bound": "_down_bound : down bounddown bound",
	"root.Draggable._move_bound": "_move_bound : move boundmove bound",
	"root.Draggable._mask": "_mask : overlay masking object used reject mouse events underlaying elementsoverlay masking object used reject mouse events underlaying elements",
	"documon.Main": "Main : main entry point initializing other classesMain documon",
	"documon.Main.init": "init : Called DOMContentReady listener window once page fully loaded Initilizes MenuTree PageManager loads previously loaded pages",
	"documon.Search": "Search : Provides search mechanism across documentationSearch documon",
	"gieson.Storage": "Storage : convienence methods localStorageStorage gieson",
	"gieson.Storage.setStore": "setStore : Stores data store string number boolean objectssetStore name thing store this later actual thing store",
	"gieson.Storage.getStore": "getStore : Retrieves item from browser local storagegetStore name thing want stored data",
	"gieson.MenuTree": "MenuTree : Builds menu based menu array menu array must conform following structure myMenuData Unique used identify menu list item html optional open when menu item clicked label display text menu item kind myCssRule class apply item good including icons children array menu item just like this When item children menu will constructed immediate nextSibling which will house items within children array Thus have many menus needed menu will build using following HTML structure opener used open close next immediate sibling opener used open close next immediate sibling opener used open close next immediate siblingMenuTree gieson only action ping select function opHandler action item action select sole item myMenu gieson MenuTree callback opHandler menuData MenuData MenuData should located window object since loaded script menuData",
	"gieson.MenuTree.toggleClick": "toggleClick : Used toggle mouse click Toggles item open closed prevents further mouse bubblingtoggleClick mouse event object menu item",
	"gieson.MenuTree.toggle": "toggle : Toggles item open closedtoggle toggle menu item",
	"gieson.MenuTree.selectClick": "selectClick : Opens highlights item menu when user physically clicksselectClick mouse event object menu item",
	"gieson.MenuTree.select": "select : Opens highlights item menuselect select menu item",
	"gieson.MenuTree.openById": "openById : Opens decendants branchopenById openById menu item Should item highlighted Should menu scroll show item item source data provided during init",
	"gieson.MenuTree.getDataById": "getDataById : Gets item source data provided during init Convient retrive source data without navigating source tree becuase maintain flat list cross reference This methods simply hooks into cross referencegetDataById getDataById menu item item source data provided during init",
	"gieson.MenuTree.listdata": "listdata : TODO should convert items store list seperate class berevity just inlined during development data store each menu item keys listData refer item Each item consists following item Optional will assigned unique none children list other items access Specific documon inherits Specific documon kind Applies class item label What user sees This created managed MenuTree miid Menu item liid actual HTML element created this item ulid parent element this child this open boolean Current state parentMiid parent menu item openerid opener element liElem actual element only stored when interacted with ulElem actual parent element only stored when interacted with openerElem actual opener triangle element only stored when interacted with ulOriginalDisplay source node original style display kind open close back normal defaults block when",
	"example.fetch": "fetch : fetch example",
	"example.parse": "parse : parse example",
	"example.send": "send : send example",
	"example.Iaudio": "Iaudio : audio Iaudioaudio Iaudio example",
	"example.audio.read.formats.mp3": "mp3 : example audio read formats",
	"example.read.formats.wav": "read.formats.wav : audio read formatsaudio read formats example",
	"example.read.rif": "read.rif : audio readaudio read example",
	"example.write.meta.id3v1": "write.meta.id3v1 : audio write meta id3v1audio write meta id3v1 example",
	"example.write.meta.id3v2": "write.meta.id3v2 : audio write meta id3v2audio write meta id3v2 example",
	"example.write.meta.m3u": "write.meta.m3u : audio write metaaudio write meta example",
	"example.write.rif": "write.rif : audio writeaudio write example",
	"example.main": "main : main example",
	"example.controls.button": "controls.button : controls buttoncontrols button example",
	"example.controls.select": "controls.select : controls selectcontrols select example",
	"example.controls.toggle": "controls.toggle : controls togglecontrols toggle example",
	"example.view.footer": "view.footer : view footerview footer example",
	"example.view.header": "view.header : view headerview header example",
	"example.view.section": "view.section : view sectionview section example",
	"documon.dirutils": "dirutils : collection utilities manipulating directories syncronouslydirutils documon",
	"documon.dirutils.makedir": "makedir : Creates folder specified location folder heirarchy constructed needed example folder exists here path folder following folders exists path folder three Then three tree will constructed inside path foldermakedir destination folder create",
	"documon.dirutils.readExt": "readExt : Collects files from folder based specified extension extensions used search recursively through folders search multiple extensions Provided shortcut readdir readdir with your extension checking filterreadExt path search extension look search multiple extensions array Find matching files folders resulting array contains only files that mathc specified extension",
	"documon.dirutils.readdir": "readdir : Read folder returns object containing files folder arraysreaddir path folder read custom filter funciton Should retrieve folders Used internally store recursive findings Note that also provide this argument readdir will populate your existing files folder list recommended leave this argument alone object containing list files folders properties returned list where each array contents readdir path folder null true yeids contents files path folder path folder path folder path folder sub1 path folder sub2 path folder sub3 dirs path folder sub1 path folder sub2 path folder sub3",
	"documon.dirutils.copydir": "copydir : Copies entire folder heirarchy folder from location another other location doesn exists will constructedcopydir source folder destination folder created exist",
	"documon.dirutils.emptydir": "emptydir : Recursively empties folder contents folder contents leaves source folderemptydir source folder Prevents actual deletion still allows return list display what will deleted array containing list paths files folders that deleted will deleted when dryrun true",
	"documon.dirutils.removedir": "removedir : Recursively removes folder folders wellremovedir path folder Prevents actual deletion still allows return return list items that will deleted array items that were deleted will deleted dryrun true",
	"documon.dirutils.exists": "exists : Checks folder existsexists path folder",
	"documon.documon": "documon : main entry point processor Documon which allows Documon directly from Nodedocumon documon myDocumon require path documon documon myDocumon files path",
	"documon.documon.writeData": "writeData : Simplify file write text jsonwriteData path save string save Whether data should serialized JSON",
	"documon.documon.filterFileTypes": "filterFileTypes : Determines file proper extension based acceptable extensions defined this modules static extensions arrayfilterFileTypes path full file name Whether extension",
	"documon.documon.init": "init : Initializes Documan based configuration settings Parses configuration Finds source files Creates output folder Copies template assets output folder Initializes main templatesinit this configuration object simply passed through False when there error misconfiguration True when everything seems cool",
	"documon.documon.shouldIgnore": "shouldIgnore : Extracts parses tags comments from source file stuffs result into organizer organizer Generates data files dumpData enabledshouldIgnore path file true ignore this file false ignore",
	"documon.documon.seeder": "seeder : Extracts parses tags comments from source file stuffs result into organizer organizer Generates data files dumpData enabledseeder path file file search data computed",
	"documon.documon.run": "run : main processing loop that executes manages main flow control parsing evaluating construction documentation After init init configures things based settings generates list files process this method process sends each file seeder seeder evaluation processing Generates HTML pages Generates menuDataconfiguration object mainConf mainConf",
	"documon.documon.mainConf": "mainConf : NOTE sourceRootFolder dataFolder injected into mainConf documon Example link other class root documon dirutils makedir root documon dirutils makedir Example link other class documon dirutils makedir documon dirutils makedir Example link other class documon dirutils documon dirutils Example link localUsed store user supplied config settings",
	"documon.documon.extensions": "extensions : list extensions search source codelist extensions search source code",
	"documon.documon.ignoreList": "ignoreList : list strings representing regex patterns files folders ignore default following patterns already included node modules Configuration will concat this list with user provied listlist strings representing regex patterns files folders ignore default following patterns already included node modules Configuration will concat this list with user provied list",
	"documon.documon.quiet": "quiet : Supress stdout messagesSupress stdout messages",
	"documon.documon.dumpData": "dumpData : Whether write intermediary files used during processing output data folderWhether write intermediary files used during processing output data folder",
	"documon.documon.indexRedirectName": "indexRedirectName : filename shortcut index html file name that will push name folder quicker access index hrml filefilename shortcut index html file name that will push name folder quicker access index hrml file",
	"documon.extract": "extract : Extracts comments from file into array mulit dementional array when text contains mulitple package namepsace definitions Each entry returned array will object containing properties start line number that comment started line number that comment ended data contents comment myComments extract yields start data descript start data descript things note data will include beginDoc endDoc strings Comment prefixing stripped star space tabs spaces Code blocks maintain indentation Splitting package namespace When single file contains mulitple references package namespace comments will split into multiple arrays treating single source file being mulitple files Split Example Class package this designates page Something method something Class package this designates page Something method something myComments extract yields first page start data Class start data Something second page start data Class start data Somethingextract documon entire file string string used open comment string used close comment array comments multi dimentional array page comments",
	"documon.fileutils": "fileutils : Basic common simplified asyncronous file methodsdocumon fileutils",
	"documon.fileutils.copy": "copy : Copies file from location anothercopy source file path destination copy source",
	"documon.fileutils.Open": "Open : Reads entire file string NOTE This alias read readOpen source file path description",
	"documon.fileutils.read": "read : Reads entire file stringread source file path description",
	"documon.fileutils.save": "save : Saves text data file Overwrites entire file with provided data NOTE This alias write writesave source file path text data save",
	"documon.fileutils.write": "write : Saves text data file Overwrites entire file with provided datawrite source file path text data save",
	"documon.fileutils.remove": "remove : Deletes file from systemremove source file path",
	"documon.fileutils.exists": "exists : Cehcsk file exists Note this also checks folder same name existsexists source file path True exists false file folder exists",
	"documon.info": "info : place store text heavy data copyright usage informationinfo documon",
	"documon.log": "log : Writes console Will accept object array well string boolena other prepare them proper presentation consoledocumon string array object output title message Disables logging prevents console output require Some Title false prints Some Title",
	"documon.markdown-core": "markdown-core : This essentially Pagedown http code google pagedown wiki PageDown with some slight modifications http code google pagedown wiki PageDown Modifications Work with configurable pretty code processor Opened configuration object pull configs down into processing channels Fixed some character encoding issues Made MarkdownExtra little easier running Many subtle problem children were placed straight suitsmarkdown core documon markdownC require markdown Converter converter markdownC markdownExtra require markdown extra markdownExtra init converter myHtml converter makeHtml decodeHtmlEntities text opts",
	"documon.markdown-core.HookCollection": "HookCollection : HookCollection description",
	"documon.markdown-core.SaveHash": "SaveHash : urls titles allow arbitrary user entered strings keys This caused exception hence stopped rendering when user entered push proto Adding prefix actual prevents this since builtin property starts with http meta stackoverflow questions 64655 strange granted switching from Array Object alone would have left only proto problem",
	"documon.markdown-core.Converter": "Converter : Creates usable converterConverter markdown require markdown converter markdown Converter",
	"documon.markdown-extra": "markdown-extra : This essentially pagedown extra https github jmcmanus pagedown extra ported simple node module https github jmcmanus pagedown extramarkdown extra documon",
	"documon.markdown-extra.init": "init : Hooks into main Markdown Converter post processing source markdown HTML conversionsinit handle MarkdownConverter instance Things instance MarkdownExtra really needed anything other than testing development purposes",
	"documon.markdown-extra.doTransform": "doTransform : doTransform transformations text",
	"documon.markdown-extra.hashExtraBlock": "hashExtraBlock : Return placeholder containing which block index hashBlocks array wrap output here PagedownhashExtraBlock block",
	"documon.markdown-extra.hashExtraInline": "hashExtraInline : hashExtraInline block",
	"documon.markdown-extra.unHashExtraBlocks": "unHashExtraBlocks : Replace placeholder blocks text with their corresponding html blocks hashBlocks arrayunHashExtraBlocks text",
	"documon.markdown-extra.wrapHeaders": "wrapHeaders : Wrap headers make sure they listswrapHeaders text",
	"documon.markdown-extra.hashHeaderAttributeBlocks": "hashHeaderAttributeBlocks : Extract headers attribute blocks move them above element they will applied hash them laterhashHeaderAttributeBlocks description description",
	"documon.markdown-extra.hashFcbAttributeBlocks": "hashFcbAttributeBlocks : Extract attribute blocks move them above element they will applied hash them laterhashFcbAttributeBlocks description description",
	"documon.markdown-extra.applyAttributeBlocks": "applyAttributeBlocks : applyAttributeBlocks descriptionapplyAttributeBlocks description description",
	"documon.markdown-extra.tables": "tables : Find convert Markdown Extra tables into htmltables description description",
	"documon.markdown-extra.stripFootnoteDefinitions": "stripFootnoteDefinitions : Strip footnote store hashesstripFootnoteDefinitions description description",
	"documon.markdown-extra.doFootnotes": "doFootnotes : Find convert footnotes referencesdoFootnotes description description",
	"documon.markdown-extra.printFootnotes": "printFootnotes : Print footnotes documentprintFootnotes description description",
	"documon.markdown-extra.fencedCodeBlocks": "fencedCodeBlocks : Find convert inspired fenced code blocks into htmlfencedCodeBlocks description description",
	"documon.markdown-extra.educatePants": "educatePants : educatePants descriptioneducatePants description description",
	"documon.markdown-extra.revertPants": "revertPants : revertPants descriptionrevertPants description description description",
	"documon.markdown-extra.applyPants": "applyPants : applyPants descriptionapplyPants description description",
	"documon.markdown-extra.runSmartyPants": "runSmartyPants : Find convert markdown extra definition lists into htmlrunSmartyPants description description",
	"documon.markdown-extra.definitionLists": "definitionLists : Find convert markdown extra definition lists into htmldefinitionLists description description",
	"documon.markdown-extra.processDefListItems": "processDefListItems : Process contents single definition list splitting into individual term definition list itemsprocessDefListItems description description",
	"documon.markdown-extra.strikethrough": "strikethrough : strikethrough descriptionstrikethrough description description",
	"documon.markdown-extra.newlines": "newlines : newlines descriptionnewlines description description",
	"documon.markdown": "markdown : front markdown processor that provides simple interface markdown processors swapped fairly easilymarkdown documon",
	"documon.menuBuilder": "menuBuilder : Takes source context object which contains entire resolved documentation data extracts meta data refactors organizes into object formatted MenuTree Constructs multi dimensional object array that represents menu tree ultimately resulting output menuData file which formatted picked MenuTree index html pagemenuBuilder documon",
	"documon.menuBuilder.buildSections": "buildSections : Checks provided context array items exists associated major kind sections packages classes property events methods example provided context will take form context classes properties array exists build that major kind section Builds context major sections into target arraybuildSections parsed documentation object array childeren into description",
	"documon.menuBuilder.hasAnyPart": "hasAnyPart : Checks major type existshasAnyPart description",
	"documon.menuBuilder.section": "section : Builds indiviual items containing pertenint meta data required MenuBuilder display item tree click open associated filesection context parse Each level down tree unique seperate context part context going process simplified meta only object that represents provided context Example returned packageName className propMethodEventEtcName packageName className html propMethodEventEtcName label propMethodEventEtcName kind propMethodEvent children only added when needed",
	"documon.menuBuilder.render": "render : main entry point processing Builds each section root node methods properties associated with classes Meaning that anything avaialble root will reside window scope they just dnagle there treerender description description",
	"documon.mimimist": "mimimist : localized version mimimist minimist dependancies processing arguments https github substack minimistmimimist documon",
	"documon.More": "More : Discovers parses converts markdown HTML injects menu with more docs Processes more markdown folder Building menu reflect more folder directory structure Translates markdown into HTMLMore documon primary documon configuration documon mainConf documon documon mainConf which should contain menu parsed source code documentation merge into more menu searchData local documon documon documon function generated seeder documon documon seeder include more docs searching Serves purposes when returning undefined notifies callee that there aren more docs Otherwise modified menu return with original sourceDocsMenu either tacked onto more menu incorporated into more menu DOCS HERE injection point",
	"documon.More.newItem": "newItem : Opens catalogs builds page from provided file pathnewItem path markdown file Process folder object containing structured data originally provided label Cleaned numbering filename name same label page template needs name property kind class used icon amFolder more folder more file amFolder folder basepath parent folder parentID parent more children Folders have children array",
	"documon.More.cleanID": "cleanID : Cleans only contains lapha numeric characters alphanumeric characters translated into underscore charactercleanID description description description",
	"documon.More.quirkyName": "quirkyName : splits numbering eight filename returns filename with numberingquirkyName description description description",
	"documon.More.parseJSON": "parseJSON : safe replacement standard JSON parsing that mitigates errors",
	"documon.More.init": "init : class description",
	"documon.More.flat": "flat : place store generated page objects with direct reference their flatplace store generated page objects with direct reference their flat",
	"documon.More.quirkDelimiter": "quirkDelimiter : Used mark where filename numbering terminates title begins User configurable moreQuirkDelimiter option more optionsUsed mark where filename numbering terminates title begins User configurable moreQuirkDelimiter option more options",
	"documon.More.metaString": "metaString : delimiting string used seperate meta JSON from normal markdowndelimiting string used seperate meta JSON from normal markdown",
	"documon.More.docGoesHereStr": "docGoesHereStr : string used flag where insert parsed source documents into menustring used flag where insert parsed source documents into menu",
	"documon.More.metaRx": "metaRx : regular expression split metaString metaStringregular expression split metaString metaString",
	"documon.npath": "npath : drop replacement path that provides cross playform normalization Easing development cross platform modules Essentially what doing processing methods with path normalization always enforcing forward slashesnpath documon",
	"documon.npath.clean": "clean : Normalizes slashes converting double single based current platform requirements",
	"documon.npath.basename": "basename : npath basename npath basenamebasename full path Lops extension matches last portion path generally filename",
	"documon.npath.dirname": "dirname : Returns path parent folder that item resides within npath dirname npath dirname sally yoyo boob sally yoyodirname path parse path file folder",
	"documon.npath.extname": "extname : this includes npath extname npath extname sally yoyo boobextname path parse extension exists including",
	"documon.npath.isAbsolute": "isAbsolute : Determines path absolute pathisAbsolute path parse",
	"documon.npath.normalize": "normalize : Resolves portions path Reduces double slashes single Forces back slashes forward slashes Retains trailing slash exists npath normalize npath normalize boob boob npath normalize current workingnormalize path parse",
	"documon.npath.parse": "parse : Extracts basic path file parts path parse home user file Yeilds root home user base file name fileparse path parse object containing following properties root home user base file name file",
	"documon.npath.relative": "relative : Creates relative path between from path relative data orandea test data orandea impl Returns implrelative When null used this value When null used this value relative path between from",
	"documon.npath.format": "format : opposite path parse Combines elements object into string Example root home user base file name file converted home user fileformat object containing some required keys formulate path string representaiton object",
	"documon.npath.join": "join : Joins path segments resolves relativity path join asdf quux Returns asdfjoin arguments evaluated paths construction description",
	"documon.npath.resolve": "resolve : Generates absolute path based thenprovided arguments Path construction occurs from right left resolve yields absolute path resolved during construction items left ignored resolve yields ignored absolute path resolved after constructing arguments inserted resolve yields current working Relative paths automatically resolved resolve yieldsresolve arguments evaluated paths construction",
	"documon.npath.removeTrailingSlash": "removeTrailingSlash : Removes trailing slash from path existsremoveTrailingSlash path",
	"documon.npath.addTrailingSlash": "addTrailingSlash : Adds trailing slash from path doesn existaddTrailingSlash path",
	"documon.npath.delimiter": "delimiter : Platform environment PATH delimiter Example PATH appears Windows Windows system32 Windows Program Files node Example PATH appears POSIX systems Unix sbin sbin local Read PATH with Node console process PATH Windows POSIX",
	"documon.opn": "opn : cross platform launch files from Node Direct copy npmjs https npmjs package github https github sindresorhus USAGE const require Opens image default image viewer unicorn then image viewer closed Opens default browser http sindresorhus Specify open http sindresorhus firefox Specify arguments http sindresorhus google chrome incognito",
	"documon.organizer": "organizer : Organizes parsed source code data into single object that takes following form organ There will always root node with absolute root root name root file root html docfile root html packages packages Classes included this package classes class methods properties events Loose stuff found this package methods properties events Independent classes that part package classes class methods properties events Loose stuff that part package class assumed accessible this javascript would window scope methods properties events source code hangs root node organized according relationship package class This organizer initialized prior parsing source code each file parsed added organizer After source code finished parsing organizer wires cross references inheritanceorganizer documon",
	"documon.organizer.init": "init : Initializes organ which object that inserting tagged data into also grabbing templates needed based location defined paramsinit configuration options sent user during documon mainConf documon mainConf keep refence here know where things Note that documon derives some additional properties onto object",
	"documon.organizer.merge": "merge : classic array merge routinemerge array that will items prop array will merge into item prop doesn exists property used validate items need merged into array containing unique elements from",
	"documon.organizer.appendPage": "appendPage : Adds class package class package objectappendPage object thing thing adding",
	"documon.organizer.addToPackageList": "addToPackageList : Adds package main packages list Creates namespace package existaddToPackageList main package list package package data",
	"documon.organizer.addToClassList": "addToClassList : Adds tagged data class array Ensures this item only addded once also place refernce item flat list future processingaddToClassList class array item data",
	"documon.organizer.add": "add : Adds source code data organ data needs formated from processor reading data determine where added main organSource code data parse processor",
	"documon.organizer.sortObj": "sortObj : Sorts main sections organ given default sorting conductedsortObj object sort sort",
	"documon.organizer.buildMenu": "buildMenu : Generates copy main organ that sorted alphabetically suitable wiht menuBuilder documon menuBuilderbuildMenu description",
	"documon.organizer.mainConf": "mainConf : reference main configuration object documon mainConf documon mainConfreference main configuration object documon mainConf documon mainConf",
	"documon.organizer.organ": "organ : primary object store data intoprimary object store data into",
	"documon.organizer.Tpackage": "Tpackage : package template processor filepackage template processor file",
	"documon.organizer.Tclass": "Tclass : class template processor fileclass template processor file",
	"documon.organizer.flatClassList": "flatClassList : maintain flat list means cross reference items that stuffed into main arraymaintain flat list means cross reference items that stuffed into main array",
	"documon.organizer.sectionNames": "sectionNames : complete list sections class package containcomplete list sections class package contain",
	"documon.parseFlags": "parseFlags : Fills output object with following properties they exist object source Entire first line inlcuding flag only first line after Everything after flag name word following type first word after flag definition when type children name Array children parent child this parent flag flag token with stripped defaultVal name afterType first line after text Here expanded exmple definition list source entire comment block after Everything after flag token kinda like source source entire comment block after Everything after flag token kinda like source this linedescr after yields type name descr name first word following type definition first word after flag definition children name written then parent child Future processing fills array forming heirarchy parent parent flag child This property only exists children flags defaultVal When name then default value will Note that quotes stripped sets default property without quotes name property flag flag kind stripped afterType Everything after type definition flag type name descr yields name descr text description paramter Note that additional description text provided below flag flag type name description more description below flag here parseFlags documon",
	"documon.searchPrep": "searchPrep : Clean text only alpha numeric characters strips newlines tabs single word results ignored Used root documon more root documon moresearchPrep documon text clean text",
	"documon.tag": "tag : Processes following flags property package namespace property method event class module private protected static public readonly overrides impliments extends inherits constructor example param return returns type order optional header defaultVal default requires Fills flags object Source Item manufactured from parseFlag parseFlag class generally provided many methods item argument they contain following fields Source Item source Entire first line inlcuding flag only first line after Everything after flag name word following type first word after flag definition when type children name Array children parent child this parent flag flag token with stripped defaultVal name afterType first line after text",
	"documon.tag.processOne": "processOne : processOne source item parsed from comments object containing flag data",
	"documon.tag.processItems": "processItems : Process flags entire list itemsprocessItems Vlist",
	"documon.tag.fillFlag": "fillFlag : fillFlag descriptionfillFlag description description description",
	"documon.utils": "utils : collection useful helper untilitiesutils documon",
	"documon.utils.sort_by": "sort_by : sort field FunctionExpression",
	"more.quick_reference": "Quick Refernce Defining Properties robust width display object bounding property width type Number default width semi robust width display object bounding property width type Number width liner name after type property object width width display object bounding width liner name before type unconventional seems more logical property width object width display object bounding width Flags following flags processed property method event three basic kinds entities normally found class module Example property type name description package namespace Generally only page have Package Namespace section below Example package class module Both entities treated equally appear final rendered docs class Example class name private protected static public readonly Items with these flags shown hidden filtered Example private overrides impliments extends inherits These items page HTML will incorporate inherited parent properties methods events which toggled requires Incorporates list dependancies that module class needs Generally shows meta section Example requires package Class constructor Generally used conjunction with class module places colored near definition example Multiple examples exist item nice have templating examples moved around they have hard coded into main description Examples section below param Classes modules methods have multiple params Params section below return returns incorporate type Example return object type Type section below order default everything sorted alphabetically this flag need things appear specific order Example order optional Generally used indicate that param header Used push general informational entry list Header section below defaultVal default fully tested since param approach better Used method paramter that default value this link similar related things Also below Header header flag provides means place informational entery main section example want entry Events section that provides general overview event system operates create comment follows event system really cool know love event header About Events kind hacky event flag tells that this header events section header name used title section menu page Also note that internally order flag yank this list appears first Types There strict types feel free anything want inbetween brackets type type checks prop Element description yields type string Element Delimit with pipe offer multiple types prop string object description yields array string object Types placed either before after name Note that this subject change since name before type industry standard even though think should prop object description yeilds type string object prop object description yeilds type string object Default Values define default values properties method parameters equal sign after name prop object also default defaultVal flags default defaultVal Optional define properties method parameters optional wrap name with quare brackets prop object When property default value keep value within square brackets well prop object Package Namespace There commonality between ideas namespace package each group code together into general theme Hence namespace package interchangable hold same meaning Documon stand alone comment integrated into either module class comment namespace cool class class Cool namespace window cool module class Cool namespace path access free whichever term suits documentation code term package exclusively addresses both concepts following will treated exactly same above package cool class module Cool package window cool module module Cool package path access split source files whenever package namespace appears causing source file treated multiple source files This allows define multiple packages within single file without having incorporate package flag into each class method property event definition simple trick stand alone comment your file package Then further down same file could include another package definition package sally incorporate package into class other definition class sally package classes methods events properties between these package entries will grouped together under each package section Just aware that package definitions over place could lost real fast package namespace sparingly package more common across programming languages idea being that larger framework application files lumped together that support common theme Traditionally classes that related theme reside same folder folder name describes theme Thus folder acts package group common classes These package folders further organized heirarchically within overall framework applicaiton structure display display bitmap display vector models models models json media media audio media audio player media audio codecs examples code text example tags like normal with indentation back ticks IMPORTANT indented examples LEAVE EMTPY LINE BEFORE AFTER example This text above example this text below example example code language used pretty printing type field Generally extension your code files example This causing following code rendered javascript because type Types html java mxml perl xhtml apollo basic dart erlang lasso lisp llvm logtalk matlab mumps pascal proto rust scala swift vhdl wiki yaml When using example flag markdown used code taken giving little more control over indentaion links markdown notation This example sentance link http example have cross linking other parts docs link another class full path package Class method link internal method property just method property name setWidth setWidth link anchor traditional Also Tags markdown link notation describe link here http example describe link here package path setWidth describe link here setWidth Inheritance When defining extends short hand classes same package example lets have classes some long winded package some long winded package extends Rather than writing class pacakge long winded package extends long winded package write class pacakge long winded package extends because same package only need long form when referencing things outside same package Comments comments need include style comments your comments HTML entity slash Something method something",
	"more.about": "Documon documentation system mortals with language Generates static searchable documentation website from JavaDoc https wikipedia wiki Javadoc style comments found within source code similar YUIdoc http github yuidoc doesn infer anything from source code directory stucture http documon assets screenshot1 food this site currently looking generated Documon Example Documentation http documon Install install documon x02186 download Documon directly stand alone Node Quick Start Within Node project javascript docs require documon docs path From node path documon index path source path destination Benefits Comment tags soley responsible organizing resulting heirarchy inheritence membership Built mortals runs Node Generates static website server side stuff Search enabled overhead database within Node build system Zero dependancies with programming language Plain text markdown based JavaDoc syntax Structure derived soley from comments Direct control over final structure resulting website Great small large projects Auto inheritance cross fill referencing links fills children classes with inherited methods props events Documon does Actual source code required Doesn interpret execute source code over arching code organization required Doesn infer inheritence membership from directory structure Doesn infer property method names arguments from source code result comment blocks must robust include pertinent details required generate documentation Involved Documon Github https github bobtherobot documon Documon https npmjs package documon Platforms Documon written Javascript runs Node https nodejs platform which runs Linux Windows systems Documon installed using https npmjs documon x02186 downloaded directly Templates Templating handled through vanilla javascript modules leveraging Template Literals https developer mozilla docs JavaScript Reference Template literals This provides highest level flexability with zero dependancies unlimited logic constraints nothing learn course since templates always roll some other templating system such Twig Handlebars into your custom template Dependancies Documon only dependancy Node additional modules needed Author Copyright Copyright copy Mike Gieson http gieson Released under license http documon downloads documon",
	"more.install": "Installation Nothing special needs done Documon aside from ensuring that Node http nodejs installed your system x02186 Download Documon http documon downloads documon Download unzip then path documon node index path source files Project Installation with incorporate Documon into your project build system your project path install documon this allows build documentation from within your project using docs require documon docs path Also Options more options Examples more examples",
	"more.usage": "Usage Documon used within your existing Javascript based project from command line Node Project based Usage Install Documon install documon then build documentation from within your project using docs require documon docs path docs here name Cool Project version Usage Documon from command line Node path documon node index cool node index really cool node Point Documon your source folder node index path source Documon generates docs folder parallel your source example above docs folder ends here path docs specify output folder second argument folder node index source output Example node index path source path output folder places docs folder here path output folder docs NOTE safety measures docs folder always generated inside output folder Because each time docs generated docs file emptied empty docs folder prevent stragglers from collecting building over time creating managing docs folder prevents wiping everything within folder Documon doesn manage explicitly input output paths following flags Source file folder Output path Example node index path source path output folder Options more Options depth look available options",
	"more.options": "Options following options available both Command Line native processing flag prop default description Path source file folder parallel source folder Path build docs into name Name your project docs displayed home page version Version your project docs displayed home page template Path template folder launch false Launch docs browser when done print false Print activity console verbose sourceExt Extension parse Space delimit multiple extensions dumpData false Dumps intermediary data into docs data folder more More docs folder containing additional documentation ignore array files folders ignore Ignoring Files section below docBegin Comment begin string docEnd Comment string indexShortcutName LAUNCH html Index shortcut name file will appear folder list have scroll poke around find index html file moreQuirkDelimiter More quirk delimiter character seperate more page numbering system from page titles gati Google Analytics Tracking present pages will include tracking code Using prop your project docs require documon docs name Cool Project version path docs here more path more folder template path template folder launch true quiet false sourceExt dumpData true ignore path example gati 106684927 Using flags path documon node index path docs here Cool Project path template folder path more folder Ignoring Files using simple indexOf match ignores which designed speed just deal with file folder full path matching word matching Sorry globs include more than file folder with semicolon delimted list node index",
	"more.templates": "Templates templating system wide open giving full control over HTML rendered default using straight javascript with template literals patching together chunks HTML create modify template only have ensure Required Files exist template files return string Required Files following files called directly Documon must exist within template folder file description arguments used config Configures assets folder below documon documon documon index main page context documon documon documon indexShortcut Shortcut home page context documon documon documon page Standard wrapper template pages context content documon documon documon package index page that lists package members context organizer documon organizer class This contains class description Methods Properties Events organizer documon organizer Each template must return single function that accepts context argument returns string Example module exports function return html body body html argument provided simple object structure containing page data page file receives second argument content which main textual body content page that formerly rendered either index package class template review structured data Documon with dumpData option more options enabled tagged javascript files show json like structure which reference configs file config file essentially central configuration object that documon reads template specific options also used template developer store global options settings config file should export following module exports assetsFolder assets Documon only reads assetsFolder property other properties exports object used Documon used templates needed free load object assetsFolder name folder templates folder that contains required assets such javascript images This entire folder will copied over including folders resulting site that Documon generates example template folder structure looks like path template path template myAssets need myAssets folder wind resulting website assetsFolder property config module exports assetsFolder myAssets then myAssets folder will copied into final doumentation docs myAssets",
	"more.supported_tags": "Supported Tags following flags processed property method event three basic kinds entities normally found class module Example property type name description package namespace Generally only page have Package Namespace section below Documon package namespace same thing They used interchangablly since Documon treats them identically Example package class module Both entities treated equally appear final rendered docs class Example class name private protected static public readonly Items with these flags shown hidden filtered Example private overrides impliments extends inherits These items page HTML will incorporate inherited parent properties methods events which toggled requires Incorporates list dependancies that module class needs Generally shows meta section Example requires package Class constructor Generally used conjunction with class module places colored near definition example Multiple examples exist item nice have templating examples moved around they have hard coded into main description Examples section below param Classes modules methods have multiple params Params section below return returns incorporate type Example return object type Type section below order default everything sorted alphabetically this flag need things appear specific order Example order optional Generally used indicate that param header Used push general informational entry list Header section below defaultVal default fully tested since inline approach better Used method paramter that default value this link similar related things Also below",
	"more.tags._class_md": "Class Generally class should only appear time file class used establish beginning collection properties methods events When class incorporated into page Documon assumes that subsequent that follow afterward part class above example class class yada method function class class yada method sally function sally will part class sally will part Documon essentially splits source file whenever runs across class class within context which will allow that entity assigned specific class however defining class page preferred method incorporating into class Common practice file class that assume that part that class When more than class appears within page page will essentially there more than class preferences page sure what happensOkay",
	"more.tags._event_md": "event When establishing event include simple name after event Example event Since events often ping function event block contain params which identical nature method more tags method param tags same rules apply Example event param string arg1 first param string arg2 second example function myHandler arg1 arg2 print arg1 arg2 something myHandler",
	"more.tags._header_md": "Header header flag provides means place informational entery main section example want entry Events section that provides general overview event system operates create comment follows event system really cool know love event header About Events kind hacky event flag tells that this header events section header name used title section menu page Also note that internally order flag yank this list appears first",
	"more.tags._method_md": "method Methods consist arguments optional return Method description method myMethod param type arg1 description param type arg2 description return type description function myMethod arg1 arg2 return arg1 arg2 word after method should identical function name your source code method myMethod function myMethod This line essential registering this comment block foundational kinds package namespace class module property method event param param used explain arguments that function receive Param tags consist parts param type arg1 description param Each param represents argument order which these tags listed must match order that they appear function type expected type that argument should usually primative such object string weak typed languages where multiple types sent separate types with pipe charater number string object questionable whether Initial caps Number String Object left that dealt with template Documon doesn enforce anything within brackets anything ther want WhatEver that what rendered name argument name should identical what used your source code Again Doumon doesn read your source code ensure commonality description remaining text after first word will picked description Placing dash front description provides visual speration between name description dash also helps Documon differentiate between name description which required some fringe cases When used Documon will strip initial dash Default Values Default Values more writing comments default values Multi dimensional object parameters Often times objects sent arguments details about properties object need explained handle this object prop pattern param object description param string description param Earthling description param Martian sally description properties carry rules normal param return lines return plural singular since agrees which should both have valid arguments whichever want return returns return similar param shouldn include name just description also choose include type return line indicate what kind thign your returning return type description included dash front description simply consistency sake required helps weak foolish brain",
	"more.tags._module_md": "module alias class more tags class Feel free match within your code just remember that Documon treats class more tags class module more tags module same",
	"more.tags._namespace_md": "namespace alias package more tags package Feel free match within your code just remember that Documon treats package more tags package namespace more tags namespace same",
	"more.tags._package_md": "package Documon based package concept resulting hierarchy that Documon generates revolves around package concept package namespace provides functionalities split source files whenever solo package namespace appears Therefore classes modules listed below package definition will automatically assigned package splitting files solo package definitions causing source file treated multiple source files This allows define multiple packages within single file without having incorporate package flag into each class method property event definition assigned stuff specific package within comment block simple trick stand alone comment your file package Then further down same file could include another package definition package sally incorporate package into class other definition class sally package classes methods events properties between these package entries will grouped together under each package section Just aware that package definitions over place could lost real fast package namespace sparingly package more common across programming languages idea being that larger framework application files lumped together that support common theme Traditionally classes that related theme reside same folder folder name describes theme Thus folder acts package group common classes These package folders further organized heirarchically within overall framework applicaiton structure display display bitmap display vector models models models json media media audio media audio player media audio codecs package namepsace Documon treats concepts Package Namespace identically because they both generally used organize code according similar functionalities over arching task free whichever term suits documentation code term package package exclusively addresses both concepts stand alone comment integrated into either module class comment namespace cool class class Cool namespace window cool module class Cool namespace path access following will treated exactly same above package cool class module Cool package window cool module module Cool package path access",
	"more.tags._property_md": "property There ways define properties using traditional JavaDoc style using Documon quick prop liner depends robust wish Since Documon relies soley tags within comments each property needs registered manually using property Example width display object bounding property width type Number default width Above used pretty robust definition which great slow Here things that make documenting little easier default value attaching equal sign value width display object bounding property width type Number width Quick Prop Liner liner name after type property object width width display object bounding width liner name before type unconventional seems more logical property width object width display object bounding width Default Values Default Values more writing comments default values",
	"more.tags._see_md": "Used link part docs also Include mulitple tags items will appear list with heading Also default Documon template display vary from template template markdown link notation describe link here http example describe link here package path setWidth describe link here setWidth",
	"more.comment_authoring_guide.overview": "Writing Comments Overview Documon reads JavaDoc https wikipedia wiki Javadoc style blocks which take form This traditional code comment style block with stars along left edge this comment block positioned immeditely above method property method myMethod param type description function myMethod Where used flag designate start documentation comment NOTE designate different start string your language uses like commenting docBegin options more options With Documon required stars down left hand side somehting like this This perfectly fine with Documon long complicated comments with HTML examples liitle easier write read just your preference method myMethod param type description function myMethod Blocks single comment block defined each variable function event class block contains general area where long description written long description required Tags appear after long description Tags used name classify categorize link generally describe entity Tags consume mulitple lines Robust Documon doesn read interpret your source code relies soley tags within comments hence following tags MUST exist within each code block package namespace class module method property event tags listed above essential Documon construct documentation website Example Property This example property type string Documon quick prop property string description Example method This function does something method param type description return type description function return hello Example class This class does something class function return hello",
	"more.comment_authoring_guide.inheritance": "Inheritance following tags used organize relationship tree extends impliments inherits overrides extends primary used establish inheritence Documon constructs relationship tree whenever extends discovered automatically processes parent child relationships When defining extends short hand classes same package example lets have classes some long winded package some long winded package extends Rather than writing class package long winded package extends long winded package write class package long winded package extends because same package only need long form when referencing things outside same package About inherits Using inherits little redundant since Documon automatically figures this based extends free incorporate inherits Documon should honor construct proper parent chold menu relationship",
	"more.comment_authoring_guide.default_values": "Default Values default defaultVal defaultValue flags default Something defaultVal defaultValue property property type object default Incorporate Default Value Inline Include default value attaching name with equal sign method param param type arg1 description quick prop property property object description equal sign must butt against name value good arg1 arg1",
	"more.comment_authoring_guide.optional_values": "Optional Values define properties method parameters optional wrap name with quare brackets prop object When property default value keep value within square brackets well prop object",
	"more.comment_authoring_guide.types": "Types There strict types feel free anything want inbetween brackets type type checks prop Element description yields type string Element Delimit with pipe offer multiple types prop string object description yields array string object Types placed either before after name Note that this subject change since name before type industry standard even though think should prop object description yeilds type string object prop object description yeilds type string object",
	"more.comment_authoring_guide.linking": "Linking markdown notation more click here http example HTML notation more href http example click here cross linking other parts docs package Class method link method property same page traditional anchor linking setWidth setWidth Website Page Structure Classes modules full HTML pages Methods properties events included within class HTML file Documon generates unique each entity represents path entity based relationship package class structure Example package class entity where entity reference method property event within class module NOTE Documon treats modules classes same brevity only refer class Documon website intercepts links interprets path Interal Method Property Event links Each standard HTML anchors within page therefore link internal within class normal anchor example This makes writing internal link within class file pretty easy full path simplicity cross linking within same class just refernce Either will work because template should incorporate both entity package class entity package class External classes link external class some other class full Link Class package MyClass Link property package MyClass example above targeting location property MyClass HTML file Again Documon website intercepts interprets automatically External link external websites just full External Website Link http example More Pages Each more page more more docs provided unique that prefixed with more link these pages using About Page more about Review More Docs more more docs page details derived nbsp nbsp nbsp 170906",
	"more.comment_authoring_guide.header": "Header header flag provides means place informational entery main section example want entry Events section that provides general overview event system operates create comment follows event system really cool know love event header About Events kind hacky event flag tells that this header events section header name used title section menu page Also note that internally order flag yank this list appears first",
	"more.comment_authoring_guide.comments_in_comments": "Comments comments include style comments your comments HTML entity slash example render this Something method something would write Something method something because HTML encoding NOTE super tricky write this explaination that above code block",
	"more.comment_authoring_guide.markdown_cheatsheet": "Markdown Cheatsheet Other nice visual references https markdown github https markdown github https support wordpress markdown quick reference https support wordpress markdown quick reference Headings Heading Heading Heading Heading Heading Heading Horizontial Rule more dash underscore characters Italic words words Bold words words Links Inline display text http example Shows when hover Referenced more click another then somewhere else like bottom page http example Shows when hover http example Shows when hover Images Bare bones assets example bells whistles text here assets example Hover over image text Referenced then somewhere else like bottom page image Shows when hover Linked image simple Click this image example http example Linked image bells whistles Click this image text example http example Hover text here Blockquotes symbol front paragraph Connected symbols vertically lumped together Code within blockquotes spaces like usual just pretend edge IMPORTANT Multi line code requires additional blockquote after code itself bottom function need this here Footnotes have more here then somewhere else like bottom page down here Lists Unordered item item item3 item item mixed fine item Ordered item item item3 just long number exists item item item Preformatted Begin line with more spaces Code Inline This code Block This Syntax Highlighted button border none Definition List Javascipt relatively easy language learn Markdown Text HTML conversion tool Abreviations example HTML stands hover over HTML then somewhere else like bottom page HTML HyperText Markup Language",
	"more.more_docs.more_docs": "More Docs Documon includes ability incorporate more information into resulting website menu using simple directory markdown file processor incorporate more info Create folder fill with markdown files optional Organize files into folders optional numbering prefix things appear proper order Point more option more options folder containing your markdown docs Below example directory structure where using numbering organize included folders DOCS HERE pointer About This Thing Install This Thing Using This Thing DOCS HERE Some Folder This long page title this spaces Another folder Sally assets image resulting menu will reflect directory structure numbering will stripped seen final menu About This Thing Install This Thing Using This Thing packages source file documentation Some Folder This long page title this spaces Another folder Sally NOTE example there fours fives This fine because numbering only used order items numbers themselves important even match numbering with numbering just long files organized order prefer Organize with Numbering want keep numbers have double things About Install Numbering requires number followed Numbers padded with zeros Numbers must butt against example will display resulting menu change character that splits numbering system from label using moreQuirkDelimiter option more options example moreQuirkDelimiter could carefull when choosing custom delimter because some operating systems choke reserved characters Meta Info optional Meta Info available which allows some tricky things such Change menu icon Link external from menu Meta Info standard JSON object located markdown file http gieson icon star meta Page Title yada yada line that reads meta acts flag boundary that seperates head from normal markdown meta flag exists Documon extracts everything above from page processes properties External Menu Links create menu item that links some external include property Meta Info json When property exists Meta Info menu button will load external something outside documentaion website generated Documon Changing Menu Icon icon property Meta Info value class definition Documon includes href http fontawesome target blank Font Awsome their existing icon classes incorporate multiple classes icon star another meta Page Title yada yada DOCS HERE pointer position doumentation generated from source code specific point your more menu create empty file named DOCS HERE place into your more folder number file DOCS HERE additional text DOCS HERE Documon just looks string DOCS HERE filename flag where insertion DOCS HERE pointer used generated source code docs will appear bottom more menu Page Each more page more more docs also provided with unique which based path filename markdown page rules follows Numbering stripped alphanumeric characters converted underscores generated stripping numbering replacing alphanumeric characters with underscore both files folders Then path convention when file located within folder finally characters converted lower case Example About folder page Install Contact example above files would more about more folder more folder page more install more contact Linking More pages same rules cross linking other classes apply page Example About Page more about General Notes Only markdown files with extension read your more folder contain other things needed Including Images Other Assets Create folder named assets within yoru more folder path more path more assets here contents this assets folder will merged into resulting website asset folder NOTE default Documon uses folder named assets store websites images NOTE name assets folder differ from template template check your template config assetsFolder setting before linking images assets your markdown",
	"more.more_docs.meta_header": "http gieson icon star meta About yada meta"
}